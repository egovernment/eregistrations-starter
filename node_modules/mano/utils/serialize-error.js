'use strict';

var forEach      = require('es5-ext/object/for-each')
  , isDbjsError  = require('dbjs/is-dbjs-error')
  , serializeKey = require('dbjs/_setup/serialize/key')

  , isArray = Array.isArray, stringify = JSON.stringify;

module.exports = function self(error) {
	var errorMock = { message: error.message, code: error.code, stack: error.stack };
	if (error.fieldName) errorMock.fieldName = error.fieldName;
	if (isDbjsError(error)) {
		errorMock.object = error.object && error.object.__id__;
		errorMock.key = serializeKey(error.key);
	}
	if (isArray(error.errors)) errorMock.errors = error.errors.map(self);
	forEach(error, function (value, name) {
		if (errorMock.hasOwnProperty(name)) return;
		try { stringify(value); } catch (e) { return; }
		errorMock[name] = value;
	});
	return errorMock;
};
