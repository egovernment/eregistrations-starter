// Runs provided programs in parallel and returns promise that resolves when they end.
// Additionally outputs debug log

'use strict';

var deferred = require('deferred')
  , debugExt = require('debug-ext')
  , exec     = deferred.promisify(require('child_process').execFile);

module.exports = function (programs, debugNamespace, debugTaskName/*, options*/) {
	var debug = debugExt(debugNamespace), options = Object(arguments[3]);
	debug.open(debugTaskName);
	return deferred.map(programs, function (program) {
		return exec(program[0], program.slice(1),
			{ env: process.env, cwd: options.cwd || process.cwd() }).aside(debug.progress);
	}).finally(debug.close);
};
