'use strict';

var callable    = require('es5-ext/object/valid-callable')
  , noop        = require('es5-ext/function/noop')
  , deferred    = require('deferred')
  , resolve     = require('path').resolve
  , i18n        = require('i18n2')
  , tryRequire  = require('../lib/utils/try-require').bind(require)
  , mano        = require('../')
  , resolveEnv  = require('./resolve-env')
  , resolveApps = require('./resolve-apps')
  , loadSchema  = require('./load-schema')

  , now = Date.now;

module.exports = function (path/*, name, log*/) {
	var time, name = arguments[1], log = arguments[2], env;
	if (log == null) log = noop;
	else callable(log);

	return deferred(resolveEnv(path).aside(function (result) { mano.env = env = result; }),
		resolveApps(path, name))(function () {
		mano.i18n = i18n(((env.i18n !== undefined) && !env.i18n) ? {}
			: tryRequire(resolve(env.root, 'i18n')));
		log("Load schemas...");
		time = now();
		return loadSchema(path, name).aside(function () {
			log(" loaded in " + ((now() - time) / 1000).toFixed(2) + "s\n");
		});
	});
};
