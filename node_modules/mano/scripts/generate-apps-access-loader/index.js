// Generates apps access loader
// This module was initially generated by mano/scripts/generate-apps-access-loader

'use strict';

var deferred        = require('deferred')
  , resolveTemplate = require('es6-template-strings')
  , resolveModule   = require('cjs-module/resolve')
  , path            = require('path')
  , readFile        = require('fs2/read-file')
  , writeFile       = require('fs2/write-file')

  , stringify = JSON.stringify
  , relative = path.relative, resolve = path.resolve
  , confTplPath = resolve(__dirname, 'access.js.tpl')

  , writeOpts = { intermediate: true };

module.exports = function (root, apps) {
	return readFile(confTplPath)(function (template) {
		return deferred.map(apps, function (appPath) {
			return resolveModule(resolve(root, appPath), './server/access')(function (path) {
				return path && appPath;
			});
		}).invoke('filter', Boolean)(function (apps) {
			var appsConf = '{\n\t' + apps.map(function (appPath) {
				var requirePath = relative('server/apps', appPath);
				if (requirePath[0] !== '.') requirePath = './' + requirePath;
				requirePath += '/server/access';
				return stringify(appPath) + ': require(' + stringify(requirePath) + ')';
			}).join(',\n\t') + '\n}';
			return writeFile(resolve(root, './server/apps/access.js'),
				resolveTemplate(template, { data: appsConf }), writeOpts);
		});
	});
};
