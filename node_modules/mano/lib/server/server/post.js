'use strict';

var copy      = require('es5-ext/object/copy')
  , forEach   = require('es5-ext/object/for-each')
  , parse     = require('url3/parse')
  , db        = require('mano').db

  , isArray = Array.isArray, push = Array.prototype.push
  , hasOwnProperty = Object.prototype.hasOwnProperty;

module.exports = function (req, res, next) {
	var routes, env, data;

	if (('GET' === req.method) || ('HEAD' === req.method)) {
		next();
		return;
	}

	if ((req._mime !== 'application/x-www-form-urlencoded') &&
			(req._mime !== 'multipart/form-data')) {
		res.statusCode = 415;
		res.end('Unsupported Media Type');
		return;
	}

	env = { res: res, req: req, user: db.User.getById(req.$user), action: parse(req.url, true) };

	data = copy(req.body);
	if (req.files) {
		forEach(req.files, function (value, name) {
			if (isArray(value) && (value.length === 1)) value = value[0];
			if (!isArray(value) && !value.size && !value.name &&
					(value.lastModifiedDate == null)) {
				value = null;
			}
			if (hasOwnProperty.call(data, name)) {
				if (value == null) return;
				if (!isArray(data[name])) (data[name] = [data[name]]);
				if (isArray(value)) push.apply(data[name], value);
				else data[name].push(value);
				return;
			}
			data[name] = value;
		});
	}
	routes = this[req.$appName];
	if (routes) {
		routes.call(env, data);
		return;
	}

	res.statusCode = 404;
	res.end('Not Found');
};
