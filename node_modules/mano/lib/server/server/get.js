'use strict';

var forEach   = require('es5-ext/object/for-each')
  , deferred  = require('deferred')
  , sendJson  = require('../utils/send-json')
  , sendError = require('../utils/send-error');

var isStream = function (stream) {
	return stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function';
};

module.exports = function (appRouters) {
	return function (req, res, next) {
		var router, result;

		if ('GET' !== req.method) {
			next();
			return;
		}
		router = appRouters[req.$appName];
		if (!router) {
			next();
			return;
		}
		try {
			result = router.routeEvent({ res: res, req: req }, req._parsedUrl.pathname, req.query);
		} catch (e) {
			sendError.call(res, e);
			return;
		}
		if (!result) {
			next();
			return;
		}
		deferred(result.result).done(function (data) {
			var isCustomType;
			if (result.conf.headers != null) {
				forEach(result.conf.headers, function (value, name) {
					if (name.toLowerCase() === 'content-type') isCustomType = true;
					res.setHeader(name, value);
				});
			}
			if (isStream(data)) {
				data.pipe(res);
				return;
			}
			if (Buffer.isBuffer(data)) isCustomType = true;
			if (!isCustomType) return sendJson.call(res, data);
			res.statusCode = 200;
			res.end(data);
		}, sendError.bind(res));
	};
};
