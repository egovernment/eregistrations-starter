'use strict';

var deferred     = require('deferred')
  , resolve      = require('path').resolve
  , stat         = require('fs2/stat')
  , serveFavicon = require('serve-favicon')
  , tryRequire   = require('../utils/try-require').bind(require)
  , loadAccess   = require('../../scripts/load-access')
  , resolveEnv   = require('../../scripts/resolve-env')
  , resolveApps  = require('../../scripts/resolve-apps')

  , now = Date.now, stdout = process.stdout.write.bind(process.stdout);

module.exports = function (path) {
	return deferred(resolveEnv(path), resolveApps(path))(function (data) {
		var mano = require('../../'), AppServer, favPath
		  , env = data[0], apps = data[1];

		mano.apps = apps;
		mano.env = env;
		mano.uploadsPath = resolve(env.root, 'uploads');

		AppServer = require('./app-server');
		if (env.smtp) mano.mail = require('./mailer').setup(env.smtp);
		if (env.legacyPool !== false) env.legacyPool = true;
		if (env.legacyPool) mano.legacyPool = require('./legacy-pool')(env);

		// Run eventual post-data scripts
		return deferred.map(apps, function (app) {
			return tryRequire(resolve(app.root, 'server/post-data'));
		})(function () {
			var time = now();
			stdout("Load access...");
			return loadAccess(path).aside(function () {
				stdout(" loaded in " + ((now() - time) / 1000).toFixed(2) + "s\n");
			});
		})(function () {
			var appServer;
			require('./client').dataPath = resolve(env.root, env.tmpFolder || 'tmp');

			// Start server
			stdout("Start server\n\n");
			mano.appServer = appServer = new AppServer(env, mano.db);
			apps.forEach(appServer.add, appServer);

			return deferred.some(apps, function (app) {
				var path = resolve(app.root, 'public/favicon.ico');
				return stat(path)(function (stats) {
					if (!stats.isFile()) return;
					favPath = path;
					return true;
				}, false);
			})(function () {
				if (favPath) appServer.app.use(serveFavicon(favPath), -1);
			});
		});
	});
};
