'use strict';

var noop        = require('es5-ext/function/noop')
  , callable    = require('es5-ext/object/valid-callable')
  , driver      = require('./mongodb-driver')
  , unserialize = require('dbjs/_setup/unserialize/value')
  , Event       = require('dbjs/_setup/event')
  , mano        = require('../../')

  , db = mano.db, dbObjects = db.objects
  , unserializeObject = dbObjects.unserialize;

module.exports = function (config/*, log*/) {
	var mongo, data, time, count = 0, propagate, log = arguments[1];

	if (log == null) log = noop;
	else callable(log);

	mano.mongo = mongo = driver(config);

	propagate = function (obj) {
		var value = unserialize(obj.value, dbObjects), proto;
		if (value && value.__id__ && (value.constructor.prototype === value)) {
			proto = value.constructor;
		}
		new Event(unserializeObject(obj._id, proto),
			value, obj.stamp); //jslint: ignore
	};

	time = Date.now();
	db._postponed_ += 1;
	data = mongo.getAll()(function (obj) {
		obj.forEach(function (obj) {
			propagate(obj);
			if (!(count % 1000)) log('.');
			++count;
		});
	}).aside(function () {
		db._postponed_ -= 1;
		time = (Date.now() - time) / 1000;
		log(' [' + count + ' objects]');
	});

	return data(mongo);
};
