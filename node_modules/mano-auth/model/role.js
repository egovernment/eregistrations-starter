'use strict';

var memoize          = require('memoizee/plain')
  , ensureDatabase   = require('dbjs/valid-dbjs')
  , defineStringLine = require('dbjs-ext/string/string-line')
  , defineCreateEnum = require('dbjs-ext/create-enum')
  , defineUser       = require('./user');

module.exports = memoize(function (db) {
	var User = defineUser(ensureDatabase(db))
	  , StringLine = defineStringLine(db)
	  , Role, RoleMeta;

	defineCreateEnum(db);

	Role = StringLine.createEnum('Role');
	RoleMeta = db.Object.extend('RoleMeta', {
		access: { type: db.Function, value: function (ignore) { return null; } }
	});
	Role.meta._descriptorPrototype_.type = RoleMeta;

	User.prototype.defineProperties({
		roles: { type: Role, required: true, multiple: true, label: "Roles" },
		currentRole: { type: Role, required: true, label: "Current Role" },
		currentRoleResolved: {
			type: Role,
			required: true,
			label: "Current Role",
			value: function () {
				if (this.currentRole && this.roles.has(this.currentRole)) {
					return this.currentRole;
				}
				return this.roles.first;
			}
		}
	});

	return Role;
}, { normalizer: require('memoizee/normalizers/get-1')() });
