'use strict';

var memoize          = require('memoizee/plain')
  , ensureDatabase   = require('dbjs/valid-dbjs')
  , ensureType       = require('dbjs/valid-dbjs-type')
  , defineStringLine = require('dbjs-ext/string/string-line')
  , defineEmail      = require('dbjs-ext/string/string-line/email')
  , i18nResolver     = require('../utils/i18n-resolver');

module.exports = memoize(function (db/*, options */) {
	var options = Object(arguments[1])
	  , Email = defineEmail(ensureDatabase(db))
	  , StringLine = defineStringLine(db)
	  , Parent = ((options.Parent != null) && ensureType(options.Parent)) || db.Object
	  , _ = i18nResolver(options.i18n);

	return Parent.extend('User', {
		email: { type: Email, required: true, unique: true, label: _("Email"),
			errorValueNotUnique: _("${invalidValue} has already been assigned to an account. " +
				"Use another email address to create your account.") },
		password: { type: db.String, required: true, label: _("Password"),
			inputHint: _("Password must be at least five characters long and must contain at " +
				"least one number and one letter.") },
		forgotPasswordToken: { type: StringLine },
		emailVerificationToken: { type: StringLine },
		isEmailVerified: { type: db.Boolean }
	});
}, { normalizer: require('memoizee/normalizers/get-1')() });
