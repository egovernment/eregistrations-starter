'use strict';

var customError = require('es5-ext/error/custom')
  , promisify   = require('deferred').promisify
  , bcrypt      = require('bcrypt')
  , db          = require('mano').db
  , _           = require('mano').i18n.bind('authentication')

  , User = db.User

  , genSalt = promisify(bcrypt.genSalt), hash = promisify(bcrypt.hash);

exports.validate = {
	email: db.Email,
	password: db.Sha256Hash,
	'password-token': function (data, env) {
		env.target = User.find('email', data.email).last;
		if (!env.target) {
			throw customError("Cannot process request",
				"MALFORMED_EMAIL", { statusCode: 400 });
		}
		if (env.target.forgotPasswordToken !== data['password-token']) {
			throw customError("Cannot process request",
				"MALFORMED_TOKEN", { statusCode: 400 });
		}
	}
};

exports.controller = function (data, env) {
	return hash(data.password, genSalt())(function (password) {
		env.target.password = password;
		delete env.target.forgotPasswordToken;
		return { message: _("Password updated") };
	});
};
