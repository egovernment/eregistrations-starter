'use strict';

var customError  = require('es5-ext/error/custom')
  , copyDeep     = require('es5-ext/object/copy-deep')
  , some         = require('es5-ext/object/some')
  , endsWith     = require('es5-ext/string/#/ends-with')
  , dbjsValidate = require('mano/lib/utils/dbjs-form-validate')
  , passwordValidation = require('../utils/password-validation');

exports.validate = function (data) {
	var normalizedData = copyDeep(data), key, password, pwdConfirmation;
	pwdConfirmation = normalizedData['password-repeat'];
	delete normalizedData['password-repeat'];
	some(normalizedData, function (value, name) {
		if (!endsWith.call(name, '/password')) return;
		key = name;
		password = passwordValidation(value, pwdConfirmation);
		delete normalizedData[key];
		return true;
	});
	if (!password) throw customError("Missing value", "NO_PASSWORD", { statusCode: 400 });
	dbjsValidate(normalizedData, { changedOnly: true });
	normalizedData[key] = password;
	this.propertyKey = key;
	return normalizedData;
};
