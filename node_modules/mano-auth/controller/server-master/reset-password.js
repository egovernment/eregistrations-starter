'use strict';

var customError      = require('es5-ext/error/custom')
  , userEmailMap     = require('mano/lib/server/user-email-map')
  , serializeValue   = require('dbjs/_setup/serialize/value')
  , unserializeValue = require('dbjs/_setup/unserialize/value')
  , mano             = require('mano')
  , hash             = require('../../hash')

  , userStorage = mano.dbDriver.getStorage('user'), _ = mano.i18n.bind("Authentication");

exports.submit = function (data) {
	return userEmailMap(function (map) {
		var userId = map.get(serializeValue(data.email));
		if (!userId) {
			throw customError("Cannot process request", "MALFORMED_EMAIL", { statusCode: 400 });
		}
		return userStorage.get(userId + '/forgotPasswordToken')(function (record) {
			var value = record ? unserializeValue(record.value) : undefined;
			if (data['password-token'] !== value) {
				throw customError("Cannot process request", "MALFORMED_TOKEN", { statusCode: 400 });
			}
			return hash.hash(data.password)(function (password) {
				return userStorage.storeMany([
					{ id: userId  + '/forgotPasswordToken', data: { value: '' } },
					{ id: userId  + '/password', data: { value: serializeValue(password) } }
				])({ message: _("Password updated") });
			});
		});
	});
};
