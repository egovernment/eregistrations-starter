'use strict';

var customError    = require('es5-ext/error/custom')
  , last           = require('es5-ext/string/#/last')
  , template       = require('es6-template-strings')
  , genId          = require('time-uuid')
  , deferred       = require('deferred')
  , serializeValue = require('dbjs/_setup/serialize/value')
  , mano           = require('mano')
  , userEmailMap   = require('mano/lib/server/user-email-map')
  , mailer         = require('mano/lib/server/mailer')

  , userStorage = mano.dbDriver.getStorage('user')
  , _ = mano.i18n.bind("Authentication"), origin = mano.env.url
  , message = { message: _("Password information sent") }
  , defaults, getUrl;

if (origin == null) throw new Error("Url not set in env.json");
if (last.call(origin) === '/') origin = String(origin).slice(0, -1);

defaults = {
	subject: _("Password information"),
	text: _("To reset your password please visit: ${url}")
};

getUrl = function (token) {
	return origin + '/reset-password/?token=' + token;
};

exports.submit = function (data) {
	return userEmailMap(function (map) {
		var userId, token;
		userId = map.get(serializeValue(data.email));
		if (!userId) {
			throw customError(_("No account with '${ email }' email address found", {
				email: data.email
			}), { statusCode: 400 });
		}
		token = genId();

		return deferred(
			userStorage.store(userId + '/forgotPasswordToken', serializeValue(token)),
			mailer({
				to: data.email,
				subject: defaults.subject,
				text: template(defaults.text, { url: getUrl(token) })
			})
		)(message);
	});
};
