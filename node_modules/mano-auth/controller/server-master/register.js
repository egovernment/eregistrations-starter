'use strict';

var deferred       = require('deferred')
  , bcrypt         = require('bcrypt')
  , userEmailMap   = require('mano/lib/server/user-email-map')
  , resolveRecords = require('mano/lib/server/resolve-records-from-form-data')
  , mano           = require('mano')

  , promisify = deferred.promisify
  , genSalt = promisify(bcrypt.genSalt), hash = promisify(bcrypt.hash)
  , dbDriver = mano.dbDriver
  , userStorage = dbDriver.getStorage('user');

exports.submit = function (data) {
	return userEmailMap.ensureUniq(data['User#/email']).then(function (value) {
		return hash(data['User#/password'], genSalt())(function (password) {
			data['User#/password'] = password;
			var result = resolveRecords(data, 'User#');
			this.targetId = result.id;
			return userStorage.storeMany(result.records)(true);
		}.bind(this));
	}.bind(this));
};
