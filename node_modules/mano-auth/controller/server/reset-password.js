'use strict';

var customError = require('es5-ext/error/custom')
  , promisify   = require('deferred').promisify
  , bcrypt      = require('bcrypt')
  , db          = require('mano').db
  , _           = require('mano').i18n.bind('authentication')

  , User = db.User

  , genSalt = promisify(bcrypt.genSalt), hash = promisify(bcrypt.hash);

exports.submit = function (data) {
	var user = User.find('email', data.email).last;
	if (!user) {
		throw customError("Cannot process request", "MALFORMED_EMAIL", { statusCode: 400 });
	}
	if (user.forgotPasswordToken !== data['password-token']) {
		throw customError("Cannot process request", "MALFORMED_TOKEN", { statusCode: 400 });
	}
	return hash(data.password, genSalt())(function (password) {
		user.password = password;
		delete user.forgotPasswordToken;
		return { message: _("Password updated") };
	});
};
