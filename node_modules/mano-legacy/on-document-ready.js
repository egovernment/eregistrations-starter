'use strict';

var $ = require('./main')

  , aborted, isReady = false, callbacks = [], onReady;

$.isDocumentReady = false;

onReady = function () {
	var cb;
	if (!isReady) {
		$.isDocumentReady = isReady = true;
		if (aborted) return;
		while ((cb = callbacks.shift())) cb();
	}
};

if (document.attachEvent) {

	// onreadystatechange check
	(function () {
		var listener;
		document.attachEvent("onreadystatechange", listener = function () {
			if (document.readyState === "complete") {
				document.detachEvent("onreadystatechange", listener);
				onReady();
			}
		});
	}());

	window.attachEvent("onbeforeunload", function () {
		// If fired before onReady then user decided to leave page before it loaded
		// Prevent loading init scripts - on IE6 they may cause page load errors
		aborted = true;
	});

	// If IE and not an iframe
	// continually check to see if the document is ready
	(function () {
		var cb;
		if (document.documentElement.doScroll) {
			try {
				if (!window.frameElement) {
					cb = function () {
						if (isReady) return;
						try {
							// If IE is used, use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							document.documentElement.doScroll("left");
						} catch (e) {
							setTimeout(cb, 0);
							return;
						}
						// and execute any waiting functions
						onReady();
					};
					cb();
				}
			} catch (ignore) {}
		}
	}());

	(function () {
		var listener;
		window.attachEvent("load", listener = function () {
			window.detachEvent("load", listener);
			onReady();
		});
	}());
}

if (document.addEventListener) {
	(function () {
		var listener;
		document.addEventListener("DOMContentLoaded", listener = function () {
			document.removeEventListener("DOMContentLoaded", listener, false);
			onReady();
		}, false);
	}());

	(function () {
		var listener;
		window.addEventListener("load", listener = function () {
			window.removeEventListener("load", listener, false);
			onReady();
		}, false);
	}());

	window.addEventListener("beforeunload", function () {
		aborted = true;
	}, false);
}

if (document.readyState) {
	(function () {
		var cb = function () {
			if (isReady) return;
			if (/loaded|complete/.test(document.readyState)) {
				onReady();
				return;
			}
			setTimeout(cb, 0);
		};
		cb();
	}());
}

module.exports = $.onDocumentReady = function (callback) {
	if (isReady && !aborted) {
		callback();
	} else {
		callbacks.push(callback);
	}
};
