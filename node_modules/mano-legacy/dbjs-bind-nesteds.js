'use strict';

var $       = require('./main')
  , create  = require('./create')
  , ignores = require('./dbjs-ignore-names')

  , objToString = Object.prototype.toString;

var isObject = function (obj) {
	if (!obj) return false;
	if (typeof obj !== 'object') return false;
	if (objToString.call(obj) !== '[object Object]') return false;
	if (obj.__setData__) return false;
	return !obj.__id__;
};

module.exports = exports = $.dbjsBindNesteds = function (obj) {
	var name, nested;
	for (name in obj) {
		if (ignores.hasOwnProperty(name)) continue;
		nested = obj[name];
		if (!isObject(nested)) continue;
		if (!obj.hasOwnProperty(name)) obj[name] = nested = create(nested);
		if (!nested.hasOwnProperty('key')) nested.key = name;
		if (!nested.hasOwnProperty('master')) nested.master = obj.master || obj;
		if (!nested.hasOwnProperty('owner')) nested.owner = obj;
		exports(nested);
	}
	return obj;
};
