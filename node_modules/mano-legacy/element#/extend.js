'use strict';

var main = require('./main')

  , append;

append = function (data) {
	var l = arguments.length, i = 0, j, l2, item, col;

	while (i < l) {
		item = arguments[i++];
		if (item == null) continue;
		if (item.nodeType) {
			this.appendChild(item);
		} else if ((typeof item === 'string') || isNaN(item.length)) {
			this.appendChild(document.createTextNode(item));
		} else {
			l2 = item.length;
			col = [];
			for (j = 0; j < l2; ++j) {
				if (item[j] == null) continue;
				col.push(item[j]);
			}
			l2 = col.length;
			for (j = 0; j < l2; ++j) {
				append.call(this, col[j]);
			}
		}
	}
};

module.exports = main.extend = function (attrs, data) {
	var i, index = 0, l = arguments.length;

	if (attrs && (typeof attrs === 'object') && isNaN(attrs.length) &&
			!attrs.nodeName) {
		for (i in attrs) {
			if (attrs.hasOwnProperty(i)) this.setAttribute(i, attrs[i]);
		}
		index = 1;
	}

	while (index < l) append.call(this, arguments[index++]);
	return this;
};
