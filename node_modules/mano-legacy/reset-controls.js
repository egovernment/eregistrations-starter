'use strict';

var dispatch = require('./dispatch-event')
  , forEach  = Array.prototype.forEach

  , resetInput, resetValue, resetSelect, resetOption;

resetOption = function (el) {
	var nu, old = el.selected;
	if (el.hasAttribute) nu = el.hasAttribute('selected');
	else nu = Boolean(el.getAttribute('select'));
	if (old === nu) return false;
	el.selected = nu;
	return true;
};

resetValue = function (el) {
	var nu = el.getAttribute('value') || '';
	if (el.value === nu) return;
	el.value = nu;
	dispatch(el, 'change');
};

resetSelect = function (el) {
	var changed;
	forEach.call(el.options, function (option) {
		if (resetOption(option)) changed = true;
	});
	if (changed) dispatch(el, 'change');
};

resetInput = function (input) {
	var old, nu;
	switch (input.type) {
	case 'checkbox':
	case 'radio':
		old = input.checked;
		if (input.hasAttribute) nu = input.hasAttribute('checked');
		else nu = Boolean(input.getAttribute('checked'));
		if (old !== nu) {
			input.checked = nu;
			dispatch(input, 'change');
		}
		return;
	case 'button':
	case 'image':
	case 'reset':
	case 'submit':
		return;
	default:
		resetValue(input);
	}
};

module.exports = function (el) {
	if (!el || !el.nodeName) throw new TypeError(el + " is not a DOM Node");
	switch (el.nodeName.toLowerCase()) {
	case 'input':
		resetInput(el);
		return;
	case 'textarea':
		resetValue(el);
		return;
	case 'select':
		resetSelect(el);
		return;
	case 'option':
	case 'br':
	case 'button':
	case 'hr':
	case 'img':
	case 'object':
	case 'video':
		return;
	default:
		if (typeof el.getElementsByTagName !== 'function') return;
		forEach.call(el.getElementsByTagName('input'), resetInput);
		forEach.call(el.getElementsByTagName('select'), resetSelect);
		forEach.call(el.getElementsByTagName('textarea'), resetValue);
	}
};
