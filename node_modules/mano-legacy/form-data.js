'use strict';

var trim = require('es3-ext/string/#/trim')
  , $    = require('./main')

  , isoDateRe = /^(\d{4})-(\d{2})-(\d{2})$/;

module.exports = $.formData = function (container) {
	var data, controls, control, i, name, type, nodeName, value, dbType, match;
	container = $(container);
	data = {};
	controls = container.getElementsByTagName('*');
	for (i = 0; (control = controls[i]); ++i) {
		nodeName = control.nodeName.toLowerCase();
		if ((nodeName !== 'input') && (nodeName !== 'select') &&
				(nodeName !== 'textarea')) {
			continue;
		}
		dbType = control.getAttribute('data-type');
		name = control.name;
		type = null;
		if (nodeName === 'input') {
			type = control.getAttribute('type') || 'text';
			if ((type === 'submit') || (type === 'image') || (type === 'reset') ||
					(type === 'button')) {
				continue;
			}
			if ((type === 'radio') && !control.checked) {
				if (!data.hasOwnProperty(name)) data[name] = null;
				continue;
			}
			if ((type === 'hidden') && (dbType === 'boolean')) continue;
		}
		value = trim.call(control.value);
		if (type === 'checkbox') {
			if (dbType === 'boolean') value = control.checked;
			else if (!control.checked) value = null;
		}
		if (type === 'radio') {
			if (dbType === 'boolean') value = (value === '1');
		}
		if (type === 'number') {
			value = ((value === '') || isNaN(value)) ? null : Number(value);
		}
		if (type === 'date') {
			match = value.match(isoDateRe);
			value = match ? new Date(match[1], match[2] - 1, match[3]) : null;
		}
		if (value === '') value = null;
		if (data.hasOwnProperty(name) && (type !== 'radio')) {
			if (data[name] == null) data[name] = [];
			else if (typeof data[name] !== 'object') data[name] = [data[name]];
			if (value != null) data[name].push(value);
		} else {
			data[name] = value;
		}
	}
	return data;
};
