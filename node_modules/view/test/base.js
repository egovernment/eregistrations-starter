'use strict';

var toArray = require('es5-ext/array/to-array');

module.exports = function (t, a) {
	var home, header, content, foo, bar, other, body, par, newcontent
	  , root, domjs, ns, page1, page2, page3, newpage;

	if (typeof document === 'undefined') return;

	domjs = require('domjs')(document);
	ns = domjs;

	root = document.documentElement;
	root.appendChild(document.createElement('head'));
	body = root.appendChild(document.createElement('body'));
	home = t(domjs, body, function () {
		if (header) a.never();
		header = ns.div({ id: 'header' }, "Header");
		content = ns.div({ id: 'content' },
			foo = ns.div({ id: 'foo' },
				ns.p("foo"),
				ns.p("bar")),
			ns.div(bar = ns.div({ id: 'bar' },
				ns.p("Other foo"),
				ns.p("Other bar"))));
	}).documentElement;
	home.name = 'home';
	a.deep(toArray(body.childNodes), [header, content],
		"Expected body content");

	page1 = home.diff('foo', function () {
		ns.span("foo 1 ");
		ns.span("foo 2");
	}, 'bar', function () {
		ns.span("bar 1 ");
		ns.span("bar 2");
	});

	page2 = home.diff('content', function () {
		par = ns.p("Whatever");
		if (other) a.never();
		other = ns.div({ id: 'other-content' },
			ns.div("page2 other 1 "),
			ns.div("page2 other 2"));
	});

	// page2.diff('./__playground/page3');
	page3 = page2.diff('other-content', '<div>other 1 </div><p>other 2</p>');

	newpage = home.diff(body, function () {
		newcontent = ns.div();
	});

	a.deep(toArray(content.childNodes), [foo, bar.parentNode],
		"Inner child content");

	page1.load();
	a(foo.textContent, 'foo 1 foo 2', "Replace content #1");
	a(bar.textContent, 'bar 1 bar 2', "Replace content #2");

	page3.load();
	a.deep(toArray(content.childNodes), [par, other],
		"Replace content (2 steps) #1");
	a(other.textContent, 'other 1 other 2', "Replace content (2 steps) #2");

	page2.load();
	a(other.textContent, 'page2 other 1 page2 other 2', "Go back");

	newpage.load();
	a.deep(toArray(body.childNodes), [newcontent], "Replace whole content");

	home.load();
	a.deep(toArray(body.childNodes), [header, content], "Reload home #1");
	a.deep(toArray(content.childNodes), [foo, bar.parentNode],
		"Reload home #2");
};
