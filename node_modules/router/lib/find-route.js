'use strict';

var dirname   = require('path2/posix/dirname')
  , isPromise = require('is-promise')

  , callIdIndex = 0;

module.exports = function (routes, pathname, data, env) {
	var parent, current, name, postfix, matchResult, callId = ++callIdIndex;

	name = (pathname === '/') ? pathname : pathname.slice(1, -1);
	if (routes[name]) {
		return routes[name](data, env) || true;
	}

	parent = (pathname === '/') ? pathname : pathname.slice(0, -1);
	current = dirname(parent);

	var handleAsync = function (result) {
		if (!result) return false;
		if (callId !== callIdIndex) return null;
		return routes[name].load(data, env) || true;
	};
	while (current !== parent) {
		name = ((current === '/') ? current : current.slice(1)) + '&';
		if (routes[name] && routes[name].match) {
			postfix = pathname.slice(current.length +
				((current === '/') ? 0 : 1), -1);
			matchResult = routes[name].match(postfix, env);
			if (isPromise(matchResult)) return matchResult.then(handleAsync);
			if (matchResult) return routes[name].load(data, env) || true;
		}
		parent = current;
		current = dirname(parent);
	}
	return false;
};
